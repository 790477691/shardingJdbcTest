<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sharding="http://shardingsphere.apache.org/schema/shardingsphere/sharding"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://shardingsphere.apache.org/schema/shardingsphere/sharding
       http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd">

    <context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>

    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="2000"/>
        <property name="logSlowSql" value="true"/>
    </bean>


    <bean id="dataSource" class="DynamicDataSource" >
        <property name="targetDataSources">
            <map>
                <entry key="mysqlSource" value-ref="mysqlSource"/>
                <entry key="mysqlSourceBj" value-ref="mysqlSourceBj"/>
                <entry key="oracleSource" value-ref="oracleSource"/>
<!--                <entry key="oracleSource" value-ref="shardingDataSource"/>-->
<!--                <entry key="h2Source" value-ref="h2Source" />-->
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="mysqlSource"/>
    </bean>

    <bean id="parentSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <!-- 初始大小 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <!-- 最小个数 -->
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <!-- 最大个数 -->
        <property name="maxActive" value="${jdbc.maxActive}"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!--  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。-->
        <property name="poolPreparedStatements" value="false"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <property name="filters" value="${jdbc.filters}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>

        <!-- 启用监控 -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
        <property name="connectionProperties">
            <value>${jdbc.connproperty}</value>
        </property>
    </bean>

    <bean id="mysqlSource" parent="parentSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    <bean id="mysqlSourceBj" parent="parentSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName1}"/>
        <property name="url" value="${jdbc.url1}"/>
        <property name="username" value="${jdbc.username1}"/>
        <property name="password" value="${jdbc.password1}"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    <bean id="oracleSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="org.apache.shardingsphere.driver.ShardingSphereDriver"/>
        <property name="url" value="jdbc:shardingsphere:classpath:scratch.yaml" />
    </bean>


<!--    <bean id="oracleSource1" parent="parentSource" init-method="init" destroy-method="close">-->
<!--        <property name="driverClassName" value="${jdbc.orcl1.driverClassName}"/>-->
<!--        <property name="url" value="${jdbc.orcl1.url}"/>-->
<!--        <property name="username" value="${jdbc.orcl1.username}"/>-->
<!--        <property name="password" value="${jdbc.orcl1.password}"/>-->
<!--        <property name="validationQuery" value="select 1 from dual"/>-->
<!--    </bean>-->

<!--    <bean id="oracleSource2" parent="parentSource" init-method="init" destroy-method="close">-->
<!--        <property name="driverClassName" value="${jdbc.orcl2.driverClassName}"/>-->
<!--        <property name="url" value="${jdbc.orcl2.url}"/>-->
<!--        <property name="username" value="${jdbc.orcl2.username}"/>-->
<!--        <property name="password" value="${jdbc.orcl2.password}"/>-->
<!--        <property name="validationQuery" value="select 1 from dual"/>-->
<!--    </bean>-->

<!--    <bean id="oracleSource3" parent="parentSource" init-method="init" destroy-method="close">-->
<!--        <property name="driverClassName" value="${jdbc.orcl3.driverClassName}"/>-->
<!--        <property name="url" value="${jdbc.orcl3.url}"/>-->
<!--        <property name="username" value="${jdbc.orcl3.username}"/>-->
<!--        <property name="password" value="${jdbc.orcl3.password}"/>-->
<!--        <property name="validationQuery" value="select 1 from dual"/>-->
<!--    </bean>-->

</beans>